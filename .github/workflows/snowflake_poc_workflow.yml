# This is a basic workflow to help you get started with Actions

name: snowflake sql script automation

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: 
      - main
    paths:
      - "db_scripts/**"

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  deploy-snowflake-changes-job:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: echo Hello, world!

      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        run: |
          echo Add other actions to build,
          echo test, and deploy your project.

      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: use python 3.12x
        uses: actions/setup-python@v2.2.1
        with:
          python-version: 3.12
      - name: Run schemachange
        env:
          SF_ACCOUNT: ${{secrets.SF_ACCOUNT}}
          SF_USERNAME: ${{secrets.SF_USERNAME}}
          SF_ROLE: ${{secrets.SF_ROLE}}
          SF_WAREHOUSE: ${{secrets.SF_WAREHOUSE}}
          SF_DATABASE: ${{secrets.SF_DATABASE}}
          SF_PASSWORD: ${{secrets.SF_PASSWORD}}
        run: |
          echo "GITHUB_WORKSPACE: $GITHUB_WORKSPACE"
          python --version
          echo "Step 1: Installing schemachange"
          pip install schemachange

          echo "Step 2: Running schemachange"
          schemachange -f $GITHUB_WORKSPACE/dbscripts -a $SF_ACCOUNT -u $SF_USERNAME -r $SF_ROLE -w $SF_WAREHOUSE -d $SF_DATABASE -c $SF_DATABASE.SCHEMACHANGE.CHANGE_HISTORY --create-change-history-table
